{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACdpNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack://reactjs-chrome/./src/popup/popup.css","webpack://reactjs-chrome/./src/popup/popup.css?8587","webpack://reactjs-chrome/./src/calculations/ActuarialCalculation.ts","webpack://reactjs-chrome/./src/popup/index.tsx","webpack://reactjs-chrome/./src/popup/popup.tsx","webpack://reactjs-chrome/webpack/bootstrap","webpack://reactjs-chrome/webpack/runtime/chunk loaded","webpack://reactjs-chrome/webpack/runtime/compat get default export","webpack://reactjs-chrome/webpack/runtime/define property getters","webpack://reactjs-chrome/webpack/runtime/hasOwnProperty shorthand","webpack://reactjs-chrome/webpack/runtime/make namespace object","webpack://reactjs-chrome/webpack/runtime/node module decorator","webpack://reactjs-chrome/webpack/runtime/jsonp chunk loading","webpack://reactjs-chrome/webpack/runtime/nonce","webpack://reactjs-chrome/webpack/before-startup","webpack://reactjs-chrome/webpack/startup","webpack://reactjs-chrome/webpack/after-startup"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\r\\n    height: 400px;\\r\\n    width: 400px;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/popup/popup.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,YAAY;AAChB\",\"sourcesContent\":[\"body {\\r\\n    height: 400px;\\r\\n    width: 400px;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./popup.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./popup.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const ActuarialCalculation = (interest, payPeriods, gender, payment, smokingStatus, age) => {\r\n    const discountRateArray = [];\r\n    const paymentArray = [];\r\n    // Step 1: Build the discount rate array using n=1,...,payPeriods (1/(1+i)^n)\r\n    let discountRate = 1 / (1 + interest);\r\n    for (let i = 0; i < payPeriods; i++) {\r\n        discountRateArray.push(discountRate);\r\n        discountRate *= 1 / (1 + interest);\r\n    }\r\n    const femaleNonsmokerMortalityArray = [\r\n        0.00032, 0.00035, 0.00038, 0.00041, 0.00043, 0.00044, 0.00044, 0.00045,\r\n        0.00045, 0.00046, 0.00046, 0.00047, 0.00048, 0.00049, 0.0005, 0.00052,\r\n        0.00053, 0.00055, 0.00057, 0.00061, 0.00064, 0.0007, 0.00078, 0.00087,\r\n        0.00098, 0.0011, 0.00124, 0.00138, 0.00152, 0.00166, 0.0018, 0.00196,\r\n        0.00213, 0.00231, 0.0025, 0.00273, 0.00298, 0.00326, 0.00359, 0.00393,\r\n        0.0043, 0.00467, 0.00503, 0.00537, 0.00572, 0.00615, 0.00667, 0.00735,\r\n        0.00822, 0.00927, 0.01041, 0.01164, 0.01286, 0.01408, 0.01537, 0.01688,\r\n        0.01871, 0.02101, 0.02386, 0.02724, 0.03107, 0.03528, 0.03979, 0.04458,\r\n        0.0498, 0.05569, 0.06245, 0.0703, 0.07937, 0.08941, 0.10038, 0.11205,\r\n        0.12446, 0.13743, 0.15112, 0.16544, 0.18062, 0.19699, 0.2152, 0.23652,\r\n        0.26338, 0.30101, 0.35966, 0.46234, 0.64743,\r\n    ]; // Female nonsmoker\r\n    const femaleSmokerMortalityArray = [\r\n        0.00042, 0.00046, 0.0005, 0.00055, 0.00058, 0.00059, 0.0006, 0.00062,\r\n        0.00063, 0.00065, 0.00066, 0.00069, 0.00072, 0.00074, 0.00078, 0.00083,\r\n        0.00087, 0.00092, 0.00097, 0.00105, 0.00111, 0.00123, 0.00139, 0.00157,\r\n        0.00178, 0.00202, 0.00231, 0.00258, 0.00286, 0.00314, 0.00342, 0.00372,\r\n        0.00403, 0.00434, 0.00468, 0.00508, 0.00548, 0.00593, 0.00646, 0.007,\r\n        0.00757, 0.00813, 0.00865, 0.00913, 0.00961, 0.01015, 0.01087, 0.01176,\r\n        0.01299, 0.01437, 0.01593, 0.01746, 0.01903, 0.02042, 0.02198, 0.02363,\r\n        0.02582, 0.02857, 0.03197, 0.03596, 0.04039, 0.04516, 0.05014, 0.05528,\r\n        0.06076, 0.06683, 0.07369, 0.08155, 0.09048, 0.10103, 0.11142, 0.12326,\r\n        0.13442, 0.14705, 0.15868, 0.17206, 0.18604, 0.20093, 0.21735, 0.23652,\r\n        0.26338, 0.30101, 0.35966, 0.46234, 0.64743,\r\n    ];\r\n    const maleNonsmokerMortalityArray = [\r\n        0.00073, 0.00086, 0.00096, 0.00101, 0.00105, 0.00106, 0.00104, 0.001,\r\n        0.00095, 0.0009, 0.00083, 0.00077, 0.00073, 0.00069, 0.00067, 0.00065,\r\n        0.00065, 0.00066, 0.00068, 0.00071, 0.00076, 0.00081, 0.00089, 0.00097,\r\n        0.00107, 0.00118, 0.00131, 0.00145, 0.00161, 0.00177, 0.00196, 0.00217,\r\n        0.0024, 0.00264, 0.00291, 0.00321, 0.00356, 0.00398, 0.00446, 0.00501,\r\n        0.00563, 0.00632, 0.00706, 0.00785, 0.00875, 0.00976, 0.01089, 0.01218,\r\n        0.01367, 0.01536, 0.01723, 0.01925, 0.02143, 0.02376, 0.02631, 0.02919,\r\n        0.03247, 0.03629, 0.04069, 0.04565, 0.05096, 0.05661, 0.06252, 0.06861,\r\n        0.07506, 0.08211, 0.08998, 0.09888, 0.10894, 0.11994, 0.13158, 0.14361,\r\n        0.15587, 0.16806, 0.18033, 0.1928, 0.20561, 0.21907, 0.2336, 0.25072,\r\n        0.27302, 0.30992, 0.36746, 0.4708, 0.6567,\r\n    ];\r\n    const maleSmokerMortalityArray = [\r\n        0.00109, 0.0013, 0.00147, 0.00157, 0.00165, 0.00169, 0.0017, 0.00166,\r\n        0.0016, 0.00154, 0.00145, 0.00137, 0.00133, 0.00129, 0.00129, 0.00131,\r\n        0.00135, 0.0014, 0.00148, 0.00158, 0.0017, 0.00185, 0.00205, 0.00227,\r\n        0.00253, 0.00283, 0.00318, 0.00355, 0.00397, 0.00441, 0.00491, 0.00541,\r\n        0.00596, 0.00653, 0.00717, 0.00786, 0.00865, 0.00954, 0.01057, 0.01172,\r\n        0.01295, 0.01428, 0.01566, 0.01712, 0.01863, 0.02031, 0.02221, 0.02435,\r\n        0.02679, 0.02948, 0.03239, 0.03542, 0.03858, 0.04181, 0.04525, 0.04904,\r\n        0.05325, 0.05806, 0.06348, 0.06939, 0.07593, 0.08265, 0.0894, 0.09605,\r\n        0.10283, 0.11003, 0.11787, 0.12656, 0.13618, 0.14632, 0.15658, 0.16659,\r\n        0.17614, 0.18654, 0.19656, 0.2063, 0.21589, 0.22565, 0.23827, 0.25322,\r\n        0.27302, 0.30992, 0.36746, 0.4708, 0.6567,\r\n    ];\r\n    // Step 2: Construct an array of n length where each value is payment\r\n    for (let i = 0; i < payPeriods; i++) {\r\n        paymentArray.push(payment);\r\n    }\r\n    // Step 3: Calculate the Actuarial Present Value\r\n    let actuarialPresentValue = 0;\r\n    let mortalityArray = []; // initialize mortality array here to conditionally mutate later\r\n    for (let i = 0; i < payPeriods; i++) {\r\n        // Determine the correct mortality array based on gender and smoking status\r\n        if (gender === \"female\" && smokingStatus === \"non-smoker\") {\r\n            mortalityArray = femaleNonsmokerMortalityArray;\r\n        }\r\n        else if (gender === \"female\" && smokingStatus === \"smoker\") {\r\n            mortalityArray = femaleSmokerMortalityArray;\r\n        }\r\n        else if (gender === \"male\" && smokingStatus === \"non-smoker\") {\r\n            mortalityArray = maleNonsmokerMortalityArray;\r\n        }\r\n        else if (gender === \"male\" && smokingStatus === \"smoker\") {\r\n            mortalityArray = maleSmokerMortalityArray;\r\n        }\r\n        else {\r\n            throw new Error(\"Invalid gender or smoking status\");\r\n        }\r\n        const presentValue = paymentArray[i] *\r\n            discountRateArray[i] *\r\n            (1 - mortalityArray[i + age - 15]);\r\n        // Add it to the total\r\n        actuarialPresentValue += presentValue;\r\n    }\r\n    console.log(\"fit check\", actuarialPresentValue, discountRateArray, paymentArray);\r\n    return actuarialPresentValue;\r\n};\r\n// Example usage:\r\n// const result = ActuarialCalculation(0.05, 10, \"Male\", 1000, \"Smoker\", 30);\r\n// console.log(result); // Replace with how you want to use the result\r\nexport default ActuarialCalculation;\r\n","import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport \"../assets/tailwind.css\";\r\nimport Popup from \"./popup\";\r\nfunction init() {\r\n    const appContainer = document.createElement(\"div\");\r\n    document.body.appendChild(appContainer);\r\n    if (!appContainer) {\r\n        throw new Error(\"Can not find AppContainer\");\r\n    }\r\n    const root = createRoot(appContainer);\r\n    console.log(appContainer);\r\n    root.render(React.createElement(Popup, null));\r\n}\r\ninit();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./popup.css\";\r\nimport { animated } from \"react-spring\";\r\nimport ActuarialCalculation from \"../calculations/ActuarialCalculation\";\r\nconst Popup = () => {\r\n    const Stages = {\r\n        Input: 1,\r\n        Result: 2,\r\n    };\r\n    // State for dropdown selections\r\n    const [gender, setGender] = useState(\"\");\r\n    const [smoking, setSmoking] = useState(\"\");\r\n    const [periods, setPeriods] = useState(\"0\");\r\n    const [interestRate, setInterestRate] = useState(\"%\");\r\n    const [numericInterest, setNumericInterest] = useState(0);\r\n    const [paymentAmount, setPaymentAmount] = useState(\"$\");\r\n    const [paymentFrequency, setPaymentFrequency] = useState(\"monthly\");\r\n    const [paymentStartYear, setPaymentStartYear] = useState(\"0\");\r\n    const [stage, setStage] = useState(Stages.Input);\r\n    const [result, setResult] = useState(null); // Result state\r\n    const [age, setAge] = useState(15);\r\n    const [ageError, setAgeError] = useState(false);\r\n    const [payPeriodError, setPayPeriodError] = useState(false);\r\n    const [smokingStatusError, setSmokingStatusError] = useState(false);\r\n    const [genderStatusError, setGenderStatusError] = useState(false);\r\n    const [formattedResult, setFormattedResult] = useState(\"\");\r\n    const [disableButton, setDisableButton] = useState(true);\r\n    // Function to format the interest rate input\r\n    const reformatInterestRateInput = (value) => {\r\n        // Remove any non-digit characters (except \".\")\r\n        value = value.replace(/[^\\d.]/g, \"\");\r\n        // Ensure only one decimal point\r\n        const parts = value.split(\".\");\r\n        if (parts.length > 2) {\r\n            value = parts.slice(0, 2).join(\".\") + parts.slice(2).join(\"\");\r\n        }\r\n        return value;\r\n    };\r\n    function parseCurrencyString(currencyString) {\r\n        // Remove special characters ('$' and ',') from the input string\r\n        const sanitizedString = currencyString.replace(/[$,]/g, \"\");\r\n        // Parse the sanitized string into a number\r\n        const numberValue = parseFloat(sanitizedString);\r\n        return numberValue;\r\n    }\r\n    const formatResult = (value) => {\r\n        // Check if the value is not a number or is NaN\r\n        if (isNaN(value) || typeof value !== \"number\") {\r\n            return \"$0.00\";\r\n        }\r\n        // Convert the number to a string and round it to two decimal places\r\n        const formattedValue = value.toFixed(2);\r\n        // Split the formatted string into dollars and cents parts\r\n        const [dollars, cents] = formattedValue.split(\".\");\r\n        // Add commas for thousands in the dollars part\r\n        const formattedDollars = dollars.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        // Reconstruct the formatted value with dollars and cents\r\n        return `$${formattedDollars}.${cents}`;\r\n    };\r\n    useEffect(() => {\r\n        if (!ageError && !payPeriodError) {\r\n            const result = ActuarialCalculation(numericInterest / 100, // Use the parsed interest rate\r\n            parseInt(periods), gender, parseCurrencyString(paymentAmount), smoking, age);\r\n            setResult(result);\r\n            setFormattedResult(formatResult(result));\r\n        }\r\n        if (gender !== \"\") {\r\n            setGenderStatusError(false);\r\n            setDisableButton(false);\r\n        }\r\n        if (age > 15 && age < 100) {\r\n            setAgeError(false);\r\n        }\r\n        if (smoking !== \"\") {\r\n            setSmokingStatusError(false);\r\n            setDisableButton(false);\r\n        }\r\n    });\r\n    // Function to handle the calculation when the button is clicked\r\n    const handleCalculate = () => {\r\n        if (smoking == \"\") {\r\n            setSmokingStatusError(true);\r\n            return;\r\n        }\r\n        if (gender == \"\") {\r\n            setGenderStatusError(true);\r\n            return;\r\n        }\r\n        // Check for age < 15\r\n        if (age < 15 || age > 100) {\r\n            setAgeError(true);\r\n            return;\r\n        }\r\n        else {\r\n            // Check for payPeriod + age <= 100\r\n            if (parseInt(periods) + age > 100) {\r\n                setPayPeriodError(true);\r\n                return;\r\n            }\r\n            else {\r\n                setPayPeriodError(false);\r\n                setAgeError(false);\r\n            }\r\n        }\r\n        if (!ageError &&\r\n            !payPeriodError &&\r\n            !genderStatusError &&\r\n            !smokingStatusError) {\r\n            setNumericInterest(parseFloat(interestRate.replace(/%/g, \"\")));\r\n            const result = ActuarialCalculation(numericInterest / 100, // Use the parsed interest rate\r\n            parseInt(periods), gender, parseCurrencyString(paymentAmount), smoking, age);\r\n            setResult(result);\r\n            setFormattedResult(formatResult(result));\r\n        }\r\n        console.log(\"handle calc\", ageError, genderStatusError, smokingStatusError, payPeriodError);\r\n        if (ageError || genderStatusError || smokingStatusError || payPeriodError) {\r\n            return;\r\n        }\r\n        else {\r\n            setStage(Stages.Result);\r\n        }\r\n    };\r\n    // Function to handle going back to the input stage\r\n    const handleBackToStage1 = () => {\r\n        setStage(Stages.Input); // Move back to the input stage\r\n    };\r\n    // Function to format the interest rate input\r\n    const formatInterestRateInput = (value) => {\r\n        // Remove any existing percent symbols from the value\r\n        value = value.replace(/%/g, \"\");\r\n        // Add a percent symbol only if the last character is not already a percent symbol\r\n        if (value[value.length - 1] !== \"%\") {\r\n            value += \"%\";\r\n        }\r\n        return value;\r\n    };\r\n    // Function to format the payment amount input\r\n    const formatPaymentAmountInput = (value) => {\r\n        // Remove any existing dollar signs and commas from the value\r\n        value = value.replace(/[$,]/g, \"\");\r\n        // Split the value into dollars and cents (if present)\r\n        const [dollars, cents] = value.split(\".\");\r\n        // Add commas for thousands in the dollars part\r\n        const formattedDollars = dollars.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        // Reconstruct the formatted value with dollars and cents\r\n        if (cents !== undefined) {\r\n            return \"$\" + formattedDollars + \".\" + cents;\r\n        }\r\n        else {\r\n            return \"$\" + formattedDollars;\r\n        }\r\n    };\r\n    // Stage 1: Input Fields\r\n    const stage1 = (React.createElement(\"div\", { className: \"\" },\r\n        React.createElement(\"div\", { className: \"mb-4 \" },\r\n            React.createElement(\"label\", { className: \"block text-gray-900 font-bold mb-2\" }, \"Gender\"),\r\n            React.createElement(\"div\", { className: \"flex items-center\" },\r\n                React.createElement(\"select\", { className: \"border rounded px-3 py-2 w-full\", value: gender, onChange: (e) => setGender(e.target.value), onSelect: (e) => setGenderStatusError(false) },\r\n                    React.createElement(\"option\", { value: \"\" }, \"Select Gender\"),\r\n                    React.createElement(\"option\", { value: \"male\" }, \"Male\"),\r\n                    React.createElement(\"option\", { value: \"female\" }, \"Female\")),\r\n                React.createElement(\"label\", { className: \"ml-4 text-gray-900 font-bold mb-2\" }, \"Age\"),\r\n                React.createElement(\"input\", { type: \"number\", className: \"border rounded px-3 py-2 w-full\", value: age, onSelect: (e) => setAgeError(false), onChange: (e) => {\r\n                        setAge(parseInt(e.target.value));\r\n                    }, min: 15, max: 100 })),\r\n            genderStatusError && (React.createElement(\"p\", { className: \"text-green-500 text-left pr-4\" }, \"Please select a gender.\")),\r\n            ageError && (React.createElement(\"p\", { className: \"text-green-500 text-left pr-4\" }, \"Age must be between 15 and 100.\"))),\r\n        React.createElement(\"div\", { className: \"mb-4\" },\r\n            React.createElement(\"div\", null,\r\n                React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\" }, \"Smoking Status\"),\r\n                React.createElement(\"select\", { className: \"border rounded px-3 py-2 w-full\", value: smoking, onChange: (e) => setSmoking(e.target.value), onSelect: (e) => setSmokingStatusError(false) },\r\n                    React.createElement(\"option\", { value: \"\" }, \"Select Smoking Status\"),\r\n                    React.createElement(\"option\", { value: \"smoker\" }, \"Smoker\"),\r\n                    React.createElement(\"option\", { value: \"non-smoker\" }, \"Non-Smoker\"))),\r\n            smokingStatusError && (React.createElement(\"p\", { className: \"text-green-500 text-left pr-4\" }, \"Please select a smoking status.\"))),\r\n        React.createElement(\"div\", { className: \"mb-4\" },\r\n            React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\" }, \"Number of Pay Periods\"),\r\n            React.createElement(\"input\", { type: \"number\", className: \"border rounded px-3 py-2 w-full\", value: periods, onSelect: (e) => {\r\n                    setPeriods(\"\");\r\n                    setPayPeriodError(false);\r\n                }, onChange: (e) => {\r\n                    setPeriods(e.target.value);\r\n                    if (payPeriodError) {\r\n                        setPayPeriodError(false);\r\n                    }\r\n                }, min: 0, max: 85 }),\r\n            payPeriodError && (React.createElement(\"p\", { className: \"text-green-500 text-right pr-4\" }, \"The sum of Pay Periods and Age must not exceed 100.\"))),\r\n        React.createElement(\"div\", { className: \"mb-4\" },\r\n            React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\" }, \"Interest Rate\"),\r\n            React.createElement(\"input\", { type: \"text\", className: \"border rounded px-3 py-2 w-full\", value: interestRate, onChange: (e) => setInterestRate(formatInterestRateInput(e.target.value)), onKeyDown: (e) => {\r\n                    // Check if the pressed key is the backspace key\r\n                    if (e.key === \"Backspace\") {\r\n                        // Handle backspace key here (if needed)\r\n                        setInterestRate(\"\");\r\n                    }\r\n                } })),\r\n        React.createElement(\"div\", { className: \"mb-4\" },\r\n            React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\" }, \"Payment Amount\"),\r\n            React.createElement(\"input\", { type: \"text\", className: \"border rounded px-3 py-2 w-full\", value: paymentAmount, onChange: (e) => setPaymentAmount(formatPaymentAmountInput(e.target.value)) })),\r\n        React.createElement(\"button\", { className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 mt-4\", onClick: handleCalculate, hidden: disableButton }, \"Calculate\")));\r\n    // Stage 2: Result\r\n    const stage2 = (React.createElement(\"div\", { className: \"text-center h-full space-y-12  \" },\r\n        React.createElement(\"p\", { className: \"text-xl mb-4 \" },\r\n            \"The Actuarial Present Value of that series of payments is:\",\r\n            \" \",\r\n            React.createElement(\"span\", { className: \"text-green-600 font-bold text-3xl\" }, formattedResult || \"0\")),\r\n        React.createElement(\"div\", { className: \"py-32\" },\r\n            React.createElement(\"button\", { className: \"bg-blue-500 text-white px-4 py-4 rounded hover:bg-blue-600 \", onClick: handleBackToStage1 }, \"Back to Input\"))));\r\n    return (React.createElement(\"div\", { className: \"w-full p-4 bg-gray-200\" },\r\n        React.createElement(\"h1\", { className: `text-2xl mb-4  ${stage === Stages.Input ? \"text-green-500 font-bold \" : \"text-blue-500\"} flex justify-center` }, stage === Stages.Input ? \"Actuarial Present Value\" : \"Result\"),\r\n        React.createElement(animated.div, { style: { width: \"100%\", height: \"100%\" } }, stage === Stages.Input ? stage1 : stage2)));\r\n};\r\nexport default Popup;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreactjs_chrome\"] = self[\"webpackChunkreactjs_chrome\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sour-b53f7e\",\"vendors-node_modules_react-spring_dist_react-spring_modern_mjs\",\"src_assets_tailwind_css\"], () => (__webpack_require__(\"./src/popup/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}